@use 'sass:math';
@use 'sass:list';

@function strip-units($number) {
  @return math.div($number, ($number * 0 + 1));
}

@function decimal-round ($number, $digits: 0, $mode: round) {
  $value: 1;
  @if type-of($number) != number {
    @warn '#{ $number } is not a number.';
    @return $number;
  }
  @if type-of($digits) != number {
    @warn '#{ $digits } is not a number.';
    @return $number;
  } @else if not unitless($digits) {
    @warn '#{ $digits } has a unit.';
    @return $number;
  }
  @if $digits > 0 {
    @for $i from 1 through $digits {
      $value: $value * 10;
    }
  }
  @if $mode == round {
    @return math.div(math.round($number * $value), $value);
  } @else if $mode == ceil {
    @return math.div(math.ceil($number * $value), $value);
  } @else if $mode == floor {
    @return math.div(math.floor($number * $value), $value);
  } @else {
    @warn '#{ $mode } is undefined keyword.';
    @return $number;
  }
}
@function decimal-ceil ($number, $digits: 0) {
  @return decimal-round($number, $digits, ceil);
}
@function decimal-floor ($number, $digits: 0) {
  @return decimal-round($number, $digits, floor);
}

@function ratio-to-percentage($ratio) {
  $w: list.nth($ratio, 1);
  $h: list.nth($ratio, 3);
  @return decimal.decimal-ceil(math.div($h, $w) * 100%, 3);
}

@function px-to-rem($pixels) {
  $number: strip-units.strip-units($pixels);
  $value: calc($number / 16);
  @if ($value == 0) {
    @return 0;
  }
  @return decimal.decimal-ceil($value, 3) + rem;
}
@function px-to-vw($pixels, $viewportSize) {
  $number: strip-units.strip-units($pixels);
  $value: calc($number / viewportSize * 100);
  @if ($value == 0) {
    @return 0;
  }
  @return decimal.decimal-ceil($value, 3) + vw;
}
